# Deploy EShop to GitHub Pages
name: Deploy EShop to GitHub Pages

on:
  push:
    branches: ["main"]
  # Remove pull_request trigger for deployment to avoid conflicts
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Prepare build directory
        run: |
          mkdir -p dist/css dist/js dist/icons

          # Copy HTML, CSS, JS
          cp src/index.html dist/
          cp -r src/css/* dist/css/
          cp -r src/js/* dist/js/

          # Copy icons (if any)
          if [ -d "src/icons" ]; then
            cp -r src/icons/* dist/icons/ 2>/dev/null || true
          fi

          # Fallback favicon
          if [ ! -f "dist/icons/favicon.ico" ]; then
            echo "Creating default favicon placeholder"
            mkdir -p dist/icons
            touch dist/icons/favicon.ico
          fi

      - name: Generate sitemap
        run: |
          cat > dist/sitemap.xml << 'EOF'
          <?xml version="1.0" encoding="UTF-8"?>
          <urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">
            <url>
              <loc>https://chinmaydipke.github.io/ESHOP_HOME/</loc>
              <lastmod>$(date +%Y-%m-%d)</lastmod>
              <changefreq>weekly</changefreq>
              <priority>1.0</priority>
            </url>
            <url>
              <loc>https://chinmaydipke.github.io/ESHOP_HOME/#products</loc>
              <lastmod>$(date +%Y-%m-%d)</lastmod>
              <changefreq>weekly</changefreq>
              <priority>0.9</priority>
            </url>
            <url>
              <loc>https://chinmaydipke.github.io/ESHOP_HOME/#about</loc>
              <lastmod>$(date +%Y-%m-%d)</lastmod>
              <changefreq>monthly</changefreq>
              <priority>0.7</priority>
            </url>
            <url>
              <loc>https://chinmaydipke.github.io/ESHOP_HOME/#contact</loc>
              <lastmod>$(date +%Y-%m-%d)</lastmod>
              <changefreq>monthly</changefreq>
              <priority>0.7</priority>
            </url>
          </urlset>
          EOF

      - name: Generate robots.txt
        run: |
          cat > dist/robots.txt << 'EOF'
          User-agent: *
          Allow: /

          Sitemap: https://chinmaydipke.github.io/ESHOP_HOME/sitemap.xml
          EOF

      - name: Create 404 page
        run: |
          cat > dist/404.html << 'EOF'
          <!DOCTYPE html>
          <html lang="en">
          <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>Page Not Found - EShop</title>
              <script src="https://cdn.tailwindcss.com"></script>
          </head>
          <body class="bg-gray-50 flex items-center justify-center min-h-screen">
              <div class="text-center">
                  <h1 class="text-6xl font-bold text-gray-900 mb-4">404</h1>
                  <h2 class="text-2xl font-semibold text-gray-700 mb-4">Page Not Found</h2>
                  <p class="text-gray-600 mb-8">The page you're looking for doesn't exist.</p>
                  <a href="/ESHOP_HOME/" class="bg-blue-600 text-white px-6 py-3 rounded-lg hover:bg-blue-700 transition-colors">
                      Return to EShop
                  </a>
              </div>
          </body>
          </html>
          EOF

      - name: List build contents
        run: |
          echo "Build directory contents:"
          ls -la dist/
          echo "Verifying required files:"
          test -f dist/index.html && echo "✅ index.html exists" || echo "❌ index.html missing"
          test -f dist/css/index.css && echo "✅ CSS exists" || echo "❌ CSS missing"
          test -f dist/js/index.js && echo "✅ JS exists" || echo "❌ JS missing"

      - name: Setup GitHub Pages
        uses: actions/configure-pages@v4

      - name: Upload build output
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
